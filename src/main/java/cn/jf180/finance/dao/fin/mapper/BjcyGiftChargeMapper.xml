<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jf180.finance.dao.fin.dao.BjcyGiftChargeMapper">
  <resultMap id="BaseResultMap" type="cn.jf180.finance.dao.fin.model.BjcyGiftCharge">
    <id column="charge_sn" jdbcType="VARCHAR" property="chargeSn" />
    <result column="ext_charge_sn" jdbcType="VARCHAR" property="extChargeSn" />
    <result column="gift_record_id" jdbcType="VARCHAR" property="giftRecordId" />
    <result column="charge_status" jdbcType="INTEGER" property="chargeStatus" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="charge_price" jdbcType="VARCHAR" property="chargePrice" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    charge_sn, ext_charge_sn, gift_record_id, charge_status, mobile, charge_price, create_time
  </sql>
  <select id="selectByExample" parameterType="cn.jf180.finance.dao.fin.model.BjcyGiftChargeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bjcy_gift_charge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bjcy_gift_charge
    where charge_sn = #{chargeSn,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from bjcy_gift_charge
    where charge_sn = #{chargeSn,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jf180.finance.dao.fin.model.BjcyGiftChargeExample">
    delete from bjcy_gift_charge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jf180.finance.dao.fin.model.BjcyGiftCharge">
    insert into bjcy_gift_charge (charge_sn, ext_charge_sn, gift_record_id, 
      charge_status, mobile, charge_price, 
      create_time)
    values (#{chargeSn,jdbcType=VARCHAR}, #{extChargeSn,jdbcType=VARCHAR}, #{giftRecordId,jdbcType=VARCHAR}, 
      #{chargeStatus,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, #{chargePrice,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.jf180.finance.dao.fin.model.BjcyGiftCharge">
    insert into bjcy_gift_charge
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="chargeSn != null">
        charge_sn,
      </if>
      <if test="extChargeSn != null">
        ext_charge_sn,
      </if>
      <if test="giftRecordId != null">
        gift_record_id,
      </if>
      <if test="chargeStatus != null">
        charge_status,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="chargePrice != null">
        charge_price,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="chargeSn != null">
        #{chargeSn,jdbcType=VARCHAR},
      </if>
      <if test="extChargeSn != null">
        #{extChargeSn,jdbcType=VARCHAR},
      </if>
      <if test="giftRecordId != null">
        #{giftRecordId,jdbcType=VARCHAR},
      </if>
      <if test="chargeStatus != null">
        #{chargeStatus,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="chargePrice != null">
        #{chargePrice,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jf180.finance.dao.fin.model.BjcyGiftChargeExample" resultType="java.lang.Long">
    select count(*) from bjcy_gift_charge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bjcy_gift_charge
    <set>
      <if test="record.chargeSn != null">
        charge_sn = #{record.chargeSn,jdbcType=VARCHAR},
      </if>
      <if test="record.extChargeSn != null">
        ext_charge_sn = #{record.extChargeSn,jdbcType=VARCHAR},
      </if>
      <if test="record.giftRecordId != null">
        gift_record_id = #{record.giftRecordId,jdbcType=VARCHAR},
      </if>
      <if test="record.chargeStatus != null">
        charge_status = #{record.chargeStatus,jdbcType=INTEGER},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.chargePrice != null">
        charge_price = #{record.chargePrice,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bjcy_gift_charge
    set charge_sn = #{record.chargeSn,jdbcType=VARCHAR},
      ext_charge_sn = #{record.extChargeSn,jdbcType=VARCHAR},
      gift_record_id = #{record.giftRecordId,jdbcType=VARCHAR},
      charge_status = #{record.chargeStatus,jdbcType=INTEGER},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      charge_price = #{record.chargePrice,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jf180.finance.dao.fin.model.BjcyGiftCharge">
    update bjcy_gift_charge
    <set>
      <if test="extChargeSn != null">
        ext_charge_sn = #{extChargeSn,jdbcType=VARCHAR},
      </if>
      <if test="giftRecordId != null">
        gift_record_id = #{giftRecordId,jdbcType=VARCHAR},
      </if>
      <if test="chargeStatus != null">
        charge_status = #{chargeStatus,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="chargePrice != null">
        charge_price = #{chargePrice,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where charge_sn = #{chargeSn,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jf180.finance.dao.fin.model.BjcyGiftCharge">
    update bjcy_gift_charge
    set ext_charge_sn = #{extChargeSn,jdbcType=VARCHAR},
      gift_record_id = #{giftRecordId,jdbcType=VARCHAR},
      charge_status = #{chargeStatus,jdbcType=INTEGER},
      mobile = #{mobile,jdbcType=VARCHAR},
      charge_price = #{chargePrice,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where charge_sn = #{chargeSn,jdbcType=VARCHAR}
  </update>
</mapper>